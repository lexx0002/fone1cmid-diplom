#Область ОписаниеПеременных

&НаСервере
Перем Специалист, ДатаПроведенияРабот, ВремяНачалаРаботПлановая, ВремяОкончанияРаботПлановая, Номер; 

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПередЗаписьюНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиента.Специалист,
	|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот,
	|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРаботПлановая,
	|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРаботПлановая,
	|	ВКМ_ОбслуживаниеКлиента.Номер
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|ГДЕ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
		
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
		
	Специалист = Выборка.Специалист;
	ДатаПроведенияРабот = Выборка.ДатаПроведенияРабот;
	ВремяНачалаРаботПлановая = Выборка.ВремяНачалаРаботПлановая;
	ВремяОкончанияРаботПлановая = Выборка.ВремяОкончанияРаботПлановая;
		
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДоговорыКонтрагентов.ВидДоговора
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка = &Договор";
	
	Запрос.УстановитьПараметр("Договор", Объект.Договор);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Если Выборка.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбоненскоеОбслуживание Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Тип договора с контрагентом не Абонентское обслуживание");
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Ключ.Пустая() Тогда
		Если Специалист <> Объект.Специалист ИЛИ ДатаПроведенияРабот <> Объект.ДатаПроведенияРабот
				ИЛИ ВремяНачалаРаботПлановая <> Объект.ВремяНачалаРаботПлановая ИЛИ ВремяОкончанияРаботПлановая <> Объект.ВремяОкончанияРаботПлановая Тогда
				
				ОтказЗаписи = "Уведомление создано";
				УведомлениеОбИзменении = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
				УведомлениеОбИзменении.ТекстСообщения = СтрШаблон("Изменения по заявке на обслуживание №%1:%2Специалист - %3,%4Дата проведения работ - %5,%6Время начала работ - %7,%8Время окончания работ - %9",
								Объект.Номер, Символы.ПС, Объект.Специалист, Символы.ПС, Формат(Объект.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;"), Символы.ПС, Формат(Объект.ВремяНачалаРаботПлановая, "ДЛФ=T;"), Символы.ПС, Формат(Объект.ВремяОкончанияРаботПлановая, "ДЛФ=T;"));
								
				УведомлениеОбИзменении.Записать();
		Иначе
				ОтказЗаписи = "Уведомление НЕ создано";
		КонецЕсли;
	Иначе
		ОтказЗаписи = "Уведомление создано";
		НовоеУведомление = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		НовоеУведомление.ТекстСообщения = СтрШаблон("Новая заявка на обслуживание:%1Специалист - %2,%3Дата проведения работ - %4,%5Время начала работ - %6,%7Время окончания работ - %8",
								Символы.ПС, Объект.Специалист, Символы.ПС, Формат(Объект.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;"), Символы.ПС, Формат(Объект.ВремяНачалаРаботПлановая, "ДЛФ=T;"), Символы.ПС, Формат(Объект.ВремяОкончанияРаботПлановая, "ДЛФ=T;"));						
		НовоеУведомление.Записать();
	КонецЕсли;
	
	ОбщегоНазначения.СообщитьПользователю(ОтказЗаписи);

КонецПроцедуры

#КонецОбласти