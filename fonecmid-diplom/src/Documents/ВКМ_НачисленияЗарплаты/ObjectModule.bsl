 #Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
 
 #Область ОбработчикиСобытий
 
Процедура ОбработкаПроведения(Отказ,Режим)
	
	// Формируются движения
	СформироватьДвижение();
	
	// Рассчитывается оклад
	РассчитатьОклад();
	  
	// Рассчитывается процент
	РассчитатьПроцентОтПродаж();
	  
	// Рассчитывается отпуск
	РассчитатьОтпуск();
	  
	// Рассчитывается НДФЛ
	РассчитатьНДФЛ();
	  
	// Рассчитываются взаиморасчеты
	ВзаиморасчетыССотрудниками();
 
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижение()
	
	// Формируются движения по окладу
	СформироватьДвижениеПоОкладу();
	
	// Формируются движения по проценту
	СформироватьДвижениеПоПроценту();
	
	// Формируются движения по отпуску
	СформироватьДвижениеПоОтпуску();
	
	// Формируются движения по удержаниям
	СформироватьДвижениеПоУдержанию();
	
	// Движения записываются
	Движения.ВКМ_ОсновныеНачисления.Записать();
	
КонецПроцедуры

Процедура СформироватьДвижениеПоОкладу()
	
	Фильтр = Новый Структура;
	Фильтр.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	НайденныеСтроки = ОсновныеНачисления.НайтиСтроки(Фильтр);
	
	Если Не ЗначениеЗаполнено(НайденныеСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник,
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.ВидРасчета,
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.ДатаНачала,
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.ДатаОкончания
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыОсновныеНачисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Ссылка = &Ссылка
		|	И ВКМ_НачисленияЗарплатыОсновныеНачисления.ВидРасчета = &Оклад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник Как Сотрудник,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад
		|ПОМЕСТИТЬ ВТ_ПроцентНачисления
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, Сотрудник В
		|		(ВЫБРАТЬ
		|			ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник
		|		ИЗ
		|			ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДокумента.Сотрудник Как Сотрудник,
		|	ВТ_ДанныеДокумента.ВидРасчета,
		|	ВТ_ДанныеДокумента.ДатаНачала Как ПериодДействияНачало,
		|	ВТ_ДанныеДокумента.ДатаОкончания Как ПериодДействияКонец,
		|	ВТ_ПроцентНачисления.Оклад Как ПоказательОклада
		|ИЗ
		|	ВТ_ПроцентНачисления КАК ВТ_ПроцентНачисления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
		|		ПО ВТ_ДанныеДокумента.Сотрудник = ВТ_ПроцентНачисления.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад;
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = Выборка.ПериодДействияНачало;
		Движение.ПериодДействияКонец = Выборка.ПериодДействияКонец;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.ПоказательОклада = Выборка.ПоказательОклада;
		
	КонецЦикла;
	

КонецПроцедуры

Процедура СформироватьДвижениеПоПроценту()

	Фильтр = Новый Структура;
	Фильтр.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Проценты);
	
	ПремияПроцентом = ОсновныеНачисления.НайтиСтроки(Фильтр);
	
	Если Не ЗначениеЗаполнено(ПремияПроцентом) Тогда
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник,
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.ВидРасчета,
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.ДатаНачала,
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.ДатаОкончания
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыОсновныеНачисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Ссылка = &Ссылка
		|	И ВКМ_НачисленияЗарплатыОсновныеНачисления.ВидРасчета = &Оклад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник Как Сотрудник,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПоказательПроцента
		|ПОМЕСТИТЬ ВТ_ПроцентНачисления
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, Сотрудник В
		|		(ВЫБРАТЬ
		|			ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник
		|		ИЗ
		|			ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДокумента.Сотрудник Как Сотрудник,
		|	ВТ_ДанныеДокумента.ВидРасчета,
		|	ВТ_ДанныеДокумента.ДатаНачала Как ПериодДействияНачало,
		|	ВТ_ДанныеДокумента.ДатаОкончания Как ПериодДействияКонец,
		|	ВТ_ПроцентНачисления.ПоказательПроцента Как ПоказательПроцента
		|ИЗ
		|	ВТ_ПроцентНачисления КАК ВТ_ПроцентНачисления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
		|		ПО ВТ_ДанныеДокумента.Сотрудник = ВТ_ПроцентНачисления.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Проценты);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Проценты;
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = Выборка.ПериодДействияНачало;
		Движение.ПериодДействияКонец = Выборка.ПериодДействияКонец;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.ПоказательПроцента = Выборка.ПоказательПроцента;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура СформироватьДвижениеПоОтпуску()

	Фильтр = Новый Структура;
	Фильтр.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	НачислениеОтпуска= ОсновныеНачисления.НайтиСтроки(Фильтр);
	
	Если Не ЗначениеЗаполнено(НачислениеОтпуска) Тогда
		Возврат;
	КонецЕсли;	

	Для Каждого СтрокаНачислениеОтпуска Из НачислениеОтпуска Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		
		Движение.ВидРасчета = СтрокаНачислениеОтпуска.ВидРасчета;
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = СтрокаНачислениеОтпуска.ДатаНачала;
		Движение.ПериодДействияКонец = СтрокаНачислениеОтпуска.ДатаОкончания;
		Движение.Сотрудник = СтрокаНачислениеОтпуска.Сотрудник;
		
		//Отпускные рассчитываются из расчёта среднедневной заработной платы за последние 12 месяцев:
		Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(СтрокаНачислениеОтпуска.ДатаНачала, -13));
		Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(СтрокаНачислениеОтпуска.ДатаНачала, -1)); 
		
КонецЦикла;

КонецПроцедуры

Процедура СформироватьДвижениеПоУдержанию()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник,
		|	МИНИМУМ(ВКМ_НачисленияЗарплатыОсновныеНачисления.ДатаНачала) КАК ДатаНачала,
		|	МАКСИМУМ(ВКМ_НачисленияЗарплатыОсновныеНачисления.ДатаОкончания) КАК ДатаОкончания
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыОсновныеНачисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
	Движение = Движения.ВКМ_Удержания.Добавить();
	Движение.Сторно = Ложь;
	Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
	Движение.ПериодРегистрации = Дата;
	Движение.Сотрудник = Выборка.Сотрудник;
	Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
	Движение.БазовыйПериодКонец = КонецМесяца(Дата);
	
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать();		

КонецПроцедуры

 Процедура РассчитатьОклад()

	Запрос = Новый Запрос;
	 
	Запрос.Текст =
	 	"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки Как НомерСтроки,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ПоказательОклада Как ПоказательОклада,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ПоказательПроцента Как ПоказательПроцента,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.РабочихДнейПериодДействия Как РабочихДнейПериодДействия,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.РабочихДнейФактическийПериодДействия Как РабочихДнейФактическийПериодДействия
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(ВидРасчета = &Оклад
		|	И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";
	 
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	 
	РезультатЗапроса = Запрос.Выполнить();
	 
	Выборка= РезультатЗапроса.Выбрать();
	 
	Пока Выборка.Следующий() Цикл
	 	
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1]; 
	 	
		Результат = Выборка.ПоказательОклада / Выборка.РабочихДнейПериодДействия * Выборка.РабочихДнейФактическийПериодДействия;
		Движение.Сумма = Результат;
	 	
	КонецЦикла;
	 
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	 	
	КонецПроцедуры

Процедура РассчитатьПроцентОтПродаж()

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.ЧасовКОплатеОборот, 0) КАК ЧасовКОплате,
		|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплате,
		|	ВКМ_ОсновныеНачисления.ПериодДействияНачало КАК ПериодНачало,
		|	ВКМ_ОсновныеНачисления.ПериодДействияКонец КАК ПериодКонец
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&НачалоПериода, &КонецПериода,,
		|			Сотрудник В
		|			(ВЫБРАТЬ
		|				ВКМ_ОсновныеНачисления.Сотрудник
		|			ИЗ
		|				РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|			ГДЕ
		|				ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|				И ВКМ_ОсновныеНачисления.ВидРасчета = &ПроцентОтПродаж)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|		ПО ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник = ВКМ_ОсновныеНачисления.Сотрудник
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_ОсновныеНачисления.ВидРасчета = &ПроцентОтПродаж";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ПроцентОтПродаж", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Проценты);
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДобавитьМесяц(Дата, -1)));

	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ДобавитьМесяц(Дата, -1)));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Результат = Выборка.СуммаКОплате;
 	   	Движение.Сумма = Результат;
 	    
	КонецЦикла;
	
	 Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры 

Процедура РассчитатьОтпуск()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки, 0) КАК НомерСтроки2,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПоказательОклада, 0) КАК ПоказательОклада,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПоказательПроцента, 0) КАК ПоказательПроцента,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.СуммаБаза, 0) КАК СуммаБаза,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.Регистратор, 0) КАК Регистратор,
	|	ВКМ_ОсновныеНачисления.НомерСтроки Как НомерСтроки,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.РабочихДнейБазовыйПериод, 0) Как РабочихДнейБазовыйПериод,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.РабочихДнейФактическийПериодДействия, 0) Как
	|		РабочихДнейФактическийПериодДействия
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
	|			Регистратор = &Ссылка
	|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &ссылка
	|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	|	И ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск";

	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки -1];
		Движение.ОтработаноДней = Выборка.РабочихДнейБазовыйПериод;
		Результат = Выборка.СуммаБаза / Выборка.РабочихДнейБазовыйПериод * Выборка.РабочихДнейФактическийПериодДействия;;
 	    Движение.Сумма = Результат;
 	    
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	 
КонецПроцедуры

Процедура РассчитатьНДФЛ()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.Сотрудник Как Сотрудник,
		|	СУММА(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.СуммаБаза) КАК СуммаБаза,
		|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки Как НомерСтроки
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения, &Разрезы, Регистратор = &Ссылка) КАК
		|		ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.Регистратор = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РегистраторРазрез
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.Сотрудник,
		|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки";
	
	Разрезы = Новый Массив;
	Разрезы.Добавить("Регистратор");
	
	Запрос.УстановитьПараметр("Разрезы", Разрезы);
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка= РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки -1];
		Результат = Выборка.СуммаБаза * 0.13;
		Движение.Сумма = Результат;
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать();	

КонецПроцедуры

Процедура ВзаиморасчетыССотрудниками()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	   	|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	   	|	СУММА(ВКМ_ОсновныеНачисления.Сумма) КАК Начисления,
	   	|	СУММА(ВКМ_Удержания.Сумма) КАК Удержания
	   	|ИЗ
	   	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	   	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	   	|		ПО ВКМ_ОсновныеНачисления.Сотрудник = ВКМ_Удержания.Сотрудник
	   	|ГДЕ
	   	|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	   	|	И ВКМ_Удержания.Регистратор = &Ссылка
	   	|СГРУППИРОВАТЬ ПО
	   	|	ВКМ_ОсновныеНачисления.Сотрудник";
   
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
   
	РезультатЗапроса = Запрос.Выполнить();
   
	Выборка = РезультатЗапроса.Выбрать();
   
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Регистратор = Ссылка;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.Начисления - Выборка.Удержания;
	КонецЦикла;
   
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();		
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
 