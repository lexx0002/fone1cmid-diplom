#Область ПрограммныйИнтерфейс

//Ищутся договора и реализации по ним, если нет реализации - создает
//Параметры:
//  Период - Дата.
//  
//Возвращаемое значение:
//	Массив из Структура
//
Функция ФормированиеРеализаций(Период) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	ДоговорыКонтрагентов.Организация КАК Организация,
	|	ДоговорыКонтрагентов.Владелец КАК Владелец
	|ПОМЕСТИТЬ ВТ_ДанныеДоговоров
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
	|	И ДоговорыКонтрагентов.ВКМ_ДатаНачалаДействия < &ДатаОкончания
	|	И ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДействия > &ДатаНачала
	|СГРУППИРОВАТЬ ПО
	|	ДоговорыКонтрагентов.Ссылка,
	|	ДоговорыКонтрагентов.Организация,
	|	ДоговорыКонтрагентов.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ДанныеРеализаций
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДоговоров.Договор КАК Договор,
	|	ВТ_ДанныеДоговоров.Организация КАК Организация,
	|	ВТ_ДанныеДоговоров.Владелец КАК Владелец,
	|	КОЛИЧЕСТВО(ВТ_ДанныеРеализаций.Ссылка) КАК КоличествоРеализаций,
	|	ВТ_ДанныеРеализаций.Ссылка КАК Реализация
	|ИЗ
	|	ВТ_ДанныеДоговоров КАК ВТ_ДанныеДоговоров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеРеализаций КАК ВТ_ДанныеРеализаций
	|		ПО (ВТ_ДанныеДоговоров.Договор = ВТ_ДанныеРеализаций.Ссылка.Договор)
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДанныеДоговоров.Договор,
	|	ВТ_ДанныеДоговоров.Организация,
	|	ВТ_ДанныеДоговоров.Владелец,
	|	ВТ_ДанныеРеализаций.Ссылка";
	
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбоненскоеОбслуживание);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Период));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТаблицаДоговоров = Новый ТаблицаЗначений();
	ТаблицаДоговоров.Колонки.Добавить("Договор", Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));
	ТаблицаДоговоров.Колонки.Добавить("Реализация", Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг"));
	
	МассивДанных = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		
		Данные = Новый Структура;
		Данные.Вставить("Договор", Выборка.Договор);
		
		Если Выборка.КоличествоРеализаций = 0 Тогда
		
			НоваяРеализация = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
			ДанныеЗаполнения = Новый Структура;
			ДанныеЗаполнения.Вставить("Дата", ТекущаяДатаСеанса());
			ДанныеЗаполнения.Вставить("Контрагент", Выборка.Владелец);
			ДанныеЗаполнения.Вставить("Договор", Выборка.Договор);
			ДанныеЗаполнения.Вставить("Организация", Выборка.Организация);
			ДанныеЗаполнения.Вставить("Основание", Документы.ЗаказПокупателя.НайтиПоНомеру("000000001"));
			НоваяРеализация.Заполнить(ДанныеЗаполнения);
			НоваяРеализация.ВыполнитьАвтозаполнение();
			Если НоваяРеализация.ПроверитьЗаполнение() Тогда
				НоваяРеализация.Записать(РежимЗаписиДокумента.Проведение);	
			Иначе
				НоваяРеализация.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
			
			Данные.Вставить("Реализация", НоваяРеализация.Ссылка);
			
		Иначе
			Данные.Вставить("Реализация", Выборка.Реализация);
		КонецЕсли;
		
		МассивДанных.Добавить(Данные);
		
	КонецЦикла;

	Возврат МассивДанных;
	
КонецФункции

#КонецОбласти